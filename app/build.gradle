apply plugin: "com.android.application"

apply plugin: "kotlin-android"

apply plugin: "kotlin-android-extensions"

ext.versionMajor = 1
ext.versionMinor = 0
ext.versionPatch = 0

ext.versionClassifier = null
ext.isSnapshot = false
ext.minimumSdkVersion = 21

ext {
    koin_version = "2.1.5"
}
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "br.com.jheimesilveira.app"
        targetSdkVersion 29
        minSdkVersion project.ext.minimumSdkVersion
        versionCode generateVersionCode() // 190010203
        versionName generateVersionName() // 1.2.3-SNAPSHOT
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"https://api.themoviedb.org\"")
            buildConfigField("String", "IMAGE_URL", "\"https://image.tmdb.org/t/p/original\"")
            buildConfigField("String", "API_KEY", "\"d54a634021ce52db8c77d3fa7a3c9a04\"")
            buildConfigField("String", "LANGUAGE", "\"pt-BR\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    // Koin AndroidX Scope features
    implementation "org.koin:koin-androidx-scope:$koin_version"

    // Koin AndroidX ViewModel features
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"

    // Koin AndroidX Fragment features
    implementation "org.koin:koin-androidx-fragment:$koin_version"

    // Koin AndroidX Experimental features
    implementation "org.koin:koin-androidx-ext:$koin_version"

    // lifecycle default MVVM
    implementation "android.arch.lifecycle:extensions:1.1.1"

    // Google Gson
    implementation "com.google.code.gson:gson:2.8.5"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.6.0"
    implementation "com.squareup.retrofit2:converter-gson:2.6.0"

    // Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:4.4.1"

    // Google Material
    implementation "com.google.android.material:material:1.2.0-alpha06"

    // Animações
    implementation "com.airbnb.android:lottie:3.0.7"

    // Carregar Imagens
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // Testes
    testImplementation "junit:junit:4.12"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
}

private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null && ext.isSnapshot) {
        ext.versionClassifier = "SNAPSHOT"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName
}
